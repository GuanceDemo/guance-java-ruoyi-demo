apiVersion: apps/v1
kind: Deployment
metadata:
  name: system-deployment
  
  labels:
    app: system-pod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: system-pod
  template:
    metadata:
      labels:
        app: system-pod
      annotations:
        admission.datakit/java-lib.version: ""
        datakit/logs: |
          [
            {
              "disable": false,
              "source": "{{ .Values.ruoyi.prefix }}-system",
              "service": "{{ .Values.ruoyi.prefix }}-system"
            }
          ]
    spec:
      containers:
        - name: system-container
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: JAVA_OPTS
              value: |-
                -javaagent:/datadog-lib/dd-java-agent.jar -XX:FlightRecorderOptions=stackdepth=256 -Ddd.service={{ .Values.ruoyi.prefix }}-system  -Ddd.logs.injection=true -Ddd.profiling.enabled=true -Ddd.profiling.ddprof.enabled=true -Ddd.profiling.ddprof.cpu.enabled=true -Ddd.profiling.ddprof.wall.enabled=true -Ddd.profiling.ddprof.alloc.enabled=true -Ddd.profiling.ddprof.liveheap.enabled=true -Ddd.tags=container_host:$(POD_NAME) -Ddd.service.mapping=mysql:{{ .Values.ruoyi.prefix }}-mysql,redis:{{ .Values.ruoyi.prefix }}-redis -Ddd.env={{ .Values.ruoyi.env }} -Ddd.version={{ .Values.ruoyi.version }} -Ddd.agent.port=9529
            - name: PARAMS
              value: "--spring.redis.host=redis-service --spring.nacos.ip=nacos-service"
          image:   {{ .Values.global.docker_registry }}/{{ .Values.global.docker_namespace }}/demo-ruoyi-system:{{ .Values.global.version }}
          imagePullPolicy: Always
          resources:
          {{- toYaml .Values.resources | nindent 12 }}

          ports:
            - containerPort: 9201
              protocol: TCP
          volumeMounts:
            - name: system-log
              mountPath: /data/app/logs

      restartPolicy: Always
      volumes:
        - name: system-log
          hostPath:
            path: /data/logs
            type: DirectoryOrCreate